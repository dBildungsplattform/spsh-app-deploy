apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
data:
  config-script: |-
    #!/bin/bash
    echo "SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = '$DB_NAME';" | psql -d postgres -w
    if [ "$DB_DELETE" = "true" ]; then
      echo "DROP DATABASE IF EXISTS $DB_NAME" | psql -d postgres -w
    else
      echo "DB_DELETE is not true. Progresses with creation of Database and User if they do not already exist."
    fi
    echo "Create owner of the DB"
    echo "SELECT 'CREATE USER spshdeveloper' WHERE NOT EXISTS (SELECT FROM pg_user WHERE usename = 'spshdeveloper')\gexec" | psql -d postgres -w
    echo "GRANT spshdeveloper TO $PGUSER" | psql -d postgres -w
    echo "Create database"
    echo "SELECT 'CREATE DATABASE $DB_NAME OWNER spshdeveloper' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = '$DB_NAME')\gexec" | psql -d postgres -w
    echo "Create and set privileges for user spshdeveloper"
    echo "SELECT 'CREATE USER spshdeveloper' WHERE NOT EXISTS (SELECT FROM pg_user WHERE usename = 'spshdeveloper')\gexec" | psql -d postgres -w
    echo "ALTER USER spshdeveloper WITH ENCRYPTED PASSWORD '$DB_SPSHDEVELOPER_USER_PASS'" | psql -d postgres -w
    echo "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME to spshdeveloper" | psql -d postgres -w
    echo "Executing optional custom command"
    echo "$DB_CUSTOM_COMMAND" | psql -d postgres -w
