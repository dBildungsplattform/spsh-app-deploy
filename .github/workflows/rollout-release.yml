---
name: Rollout Release Action 

on:
  workflow_call:
    inputs:
      release_tag:
        type: string
        required: true
      instance_name:
        type: string
        required: true
    secrets:
      TOKEN:
        required: true
      KUBECONFIG:
        required: true
      RC_WEBHOOK: 
        required: true

permissions:
  contents: read

jobs:
  rollout:
    runs-on: 'ubuntu-latest'
    env:
      GITHUB_TOKEN: ${{ github.token }}
      KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          repository: 'dBildungsplattform/spsh-app-deploy'
          # ref: "${{ inputs.release_tag }}"
          ref: DBP-647-poc-release-process-for-spsh

      - name: Install kubectl and Helm
        uses: azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f #v4.0.0

      - name: Install Helm Compose Plugin
        run: |
          helm plugin install https://github.com/seacrew/helm-compose --version 1.3.0

      - name: Set kubeconfig
        run: |
          mkdir /home/runner/.kube/
          echo "${{ secrets.KUBECONFIG }}" > /home/runner/.kube/config
          chown $(id -u):$(id -g) /home/runner/.kube/config
          chown -R $(id -u):$(id -g) /home/runner/.kube
          chmod 600 /home/runner/.kube
      
      # let action fail on error
      - name: Deploy Release via Helm Compose 
        working-directory: ${{ github.workspace }}
        run: |
          pwd
          whoami
          helm compose up --file $(pwd)/instances/${{ inputs.instance_name }}.yml

    # tests:
    #   runs-on: 'ubuntu-latest'
    #   needs: 
    #     - release
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #     KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
    #   steps:
    #     uses: dBildungsplattform/schulportal-testautomatisierung/.github/workflows/playwright.yml@main
    #     with:
    #       frontendHostname: "spsh.staging.spsh.dbildungsplattform.de"
