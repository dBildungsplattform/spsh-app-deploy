---
name: Deploy Action

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      namespace:
        required: true
        type: string
      user_name:
         required: false
         default: spsh-bot
         type: string
    secrets:
      SPSH_DEV_KUBECONFIG:
        required: true
permissions:
  contents: read

jobs:
  # Create Namespace
  # create-namespace:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Trigger create namespace
  #       uses: Consensys/kubernetes-action@master
  #       env:
  #         KUBE_CONFIG_DATA: ${{ secrets.DEV_KUBE_CONFIG }}
  #       with:
  #         args: apply deployment.yaml

  # Search for helm charts          
  search-helm-charts:
    runs-on: 'ubuntu-latest'
    env:
      GITHUB_TOKEN: ${{ github.token }}
      KUBECONFIG_FILE: '${{ secrets.SPSH_DEV_KUBECONFIG }}'
    steps:
      - name: Get releases by ticket name by releaseNameRegEx
        id: getByReleaseNameRegEx
        uses: cardinalby/git-get-release-action@1.2.4
        with:
          releaseNameRegEx: 'dbildungs-iam-0.0.0-${{ inputs.branch }}'
          doNotFailIfNotFound: 'true'
          repo: 'dBildungsplattform/helm-charts-registry'
      # ToDo create Variable for tag_name and set it to latest from main branch if this does not exist 
      - name: Check getByReleaseNameRegEx step result
        run: |
          echo "${{ steps.getByReleaseNameRegEx.outputs.tag_name }}" &&
          echo ${{ toJSON(steps.getByReleaseNameRegEx.outputs.body) }}
      # Deploy Helmcharts
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.0.2'

      - name: Download Helm chart from release
        run: |
          wget https://github.com/dBildungsplattform/helm-charts-registry/releases/download/${{ steps.getByReleaseNameRegEx.outputs.tag_name }}/${{ steps.getByReleaseNameRegEx.outputs.tag_name }}.tgz
          tar -zxvf ${{ steps.getByReleaseNameRegEx.outputs.tag_name }}

      - name: Deploy Helm chart
        run: |
          helm upgrade --install \
            ${{ steps.getByReleaseNameRegEx.outputs.tag_name }} \
            dbildungs-iam \
            --namespace ${{ inputs.namespace }} \
            --kubeconfig ${{ env.KUBECONFIG_FILE }}


  
  # The workflow must contain at least one job with no dependencies
  deploy-successful:
    needs:
      - deployment
    runs-on: ubuntu-latest
    steps:
      - run: echo "deploy was successful"