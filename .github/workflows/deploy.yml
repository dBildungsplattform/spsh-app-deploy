---
name: Deploy Action

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      namespace:
        required: true
        type: string
      user_name:
         required: false
         default: spsh-bot
         type: string
    secrets:
      DEV_KUBE_CONFIG:
        required: true
permissions:
  contents: read

jobs:
  # Create Namespace
  # create-namespace:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Trigger create namespace
  #       uses: Consensys/kubernetes-action@master
  #       env:
  #         KUBE_CONFIG_DATA: ${{ secrets.DEV_KUBE_CONFIG }}
  #       with:
  #         args: apply deployment.yaml

  # deployment:
  #   runs-on: 'ubuntu-latest'
  #   steps:
  #   - name: 'Deploy'
  #     uses: 'deliverybot/helm@v1'
  #     with:
  #       release: 'nginx'
  #       namespace:  ${{ inputs.branch }
  #       chart: 'chartmuseum/app'
  #       token: '${{ github.token }}'
  #       repo: 'https://github.com/dBildungsplattform/helm-charts-registry/main/'
  #       repo-alias: chartmuseum

  #     env:
  #       KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'

  # Search for helm charts          
  search-helm-charts:
    runs-on: 'ubuntu-latest'
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Get releases by ticket name by releaseNameRegEx
        id: getByReleaseNameRegEx
        uses: cardinalby/git-get-release-action@1.2.4
        with:
          releaseNameRegEx: 'dbildungs-iam-0.0.0-${{ inputs.branch }'
          doNotFailIfNotFound: 'true'
          repo: 'dBildungsplattform/helm-charts-registry'
      - name: Check getByReleaseNameRegEx step result
        run: echo "${{ steps.getByReleaseNameRegEx.outputs.tag_name }}" && echo "${{ toJSON(steps.getByReleaseNameRegEx.outputs.body) }}"
  # Deploy Helmcharts
  
  # The workflow must contain at least one job with no dependencies
  deploy-successful:
    runs-on: ubuntu-latest
    steps:
      - run: echo "deploy was successful"