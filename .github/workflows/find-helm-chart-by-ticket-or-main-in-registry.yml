---
name: Find Helm-chart out of a github Repository based on a searchstring (part of branchname), or take last of main

on:
  workflow_call:
    inputs:
      github_repository:
        required: true
        type: string
      branch:
        required: true
        description: "Searchstring of the branch to "
        type: string
      chart_name:
        required: true
        description: "Name of the helm chart to search"
        type: string
      service_name:
        required: true
        description: "Name of the Service, used for logging"
        type: string
    outputs:
      helm_chart_tagname: 
        description: "Tagname of the helm-chart"
        value: ${{ jobs.search_for_helm_tagname.outputs.helm_chart_tagname }}
permissions:
  contents: read

jobs:     
  search_for_helm_tagname:
    runs-on: 'ubuntu-latest'
    env:
      GITHUB_TOKEN: ${{ github.token }}
    outputs:
      helm_chart_tagname: ${{ steps.set_tagname_as_output.outputs.helm_chart_tagname }}
    steps:
      - name: Search ${{ inputs.service_name }} and get Helm Chart release by ticket name with releaseNameRegEx action
        if: ${{ github.ref_name != 'main' }}
        id: getByReleaseNameRegEx
        uses: cardinalby/git-get-release-action@1.2.4
        with:
          releaseNameRegEx: "${{ inputs.chart_name }}-0.0.0-${{ inputs.branch }}"
          searchLimit: 1000
          doNotFailIfNotFound: 'true'
          repo: "${{ inputs.github_repository }}"
    
      - name: Set Branch Helm Chart tagname as variable for ${{ inputs.service_name }}
        if: ${{ steps.getByReleaseNameRegEx.outputs.tag_name != '' && github.ref_name != 'main' }}
        run: |
          echo "${{ steps.getByReleaseNameRegEx.outputs.tag_name }}"
          echo "helm_chart_tagname=${{ steps.getByReleaseNameRegEx.outputs.tag_name }}" >> $GITHUB_ENV
      
      - name: Check if a Branch Helm Chart was found, if not, take last from main
        if: ${{ steps.getByReleaseNameRegEx.outputs.tag_name == '' || github.ref_name == 'main'  }}
        id: getMainByReleaseNameRegEx
        uses: cardinalby/git-get-release-action@1.2.4
        with:
          releaseNameRegEx: "${{ inputs.chart_name }}-0.0.1"
          doNotFailIfNotFound: 'true'
          searchLimit: 1000
          repo: "${{ inputs.github_repository }}"
      
      - name:  Exit if latest main helm-chart is not found 
        if: steps.getMainByReleaseNameRegEx.outputs.tag_name == '' && steps.getByReleaseNameRegEx.outputs.tag_name == ''
        run: |
          echo No ${{ inputs.service_name }} Helm Chart is not found, exit 
          exit 1

      - name:  Set Helm Chart tagname as variable for ${{ inputs.service_name }}, last from main
        if: steps.getByReleaseNameRegEx.outputs.tag_name == '' 
        run: |
          echo "${{ steps.getMainByReleaseNameRegEx.outputs.tag_name }}"
          echo "helm_chart_tagname=${{ steps.getMainByReleaseNameRegEx.outputs.tag_name }}" >> $GITHUB_ENV
      
      - name:  Set Helm Chart tagname as Output
        id: set_tagname_as_output
        run: |
          echo "$helm_chart_tagname"
          echo "helm_chart_tagname=$helm_chart_tagname" >> $GITHUB_OUTPUT